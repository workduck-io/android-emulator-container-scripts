# Copyright 2019 - The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
FROM {{from_base_img}} AS emulator

RUN apt-get update && apt-get install -y --no-install-recommends \
    # Emulator & video bridge dependencies
    libc6 libdbus-1-3 libfontconfig1 libgcc1 \
    libpulse0 libtinfo5 libx11-6 libxcb1 libxdamage1 \
    libnss3 libxcomposite1 libxcursor1 libxi6 \
    libxext6 libxfixes3 zlib1g libgl1 pulseaudio socat \
    iputils-ping \
    # Enable turncfg through usage of curl
    curl ca-certificates && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Now we configure the user account under which we will be running the emulator
RUN  mkdir -p /android-home

COPY launch-emulator.sh /android/sdk/
COPY default.pa /etc/pulse/default.pa

RUN gpasswd -a root audio && \
    chmod +x /android/sdk/launch-emulator.sh

COPY emu/ /android/sdk/
COPY avd/ /android-home

EXPOSE 5554

# This is the ADB port, useful.
EXPOSE 5555

# This is the gRPC port, also useful, we don't want ADB to incorrectly identify this.
EXPOSE 8554

WORKDIR /root

LABEL maintainer="{{user}}" \
    com.google.android.emulator.version="{{emu_build_id}}"

RUN apt-get -qqy update && \
    apt-get -qqy --no-install-recommends install \
    openjdk-8-jdk \
    ca-certificates \
    tzdata \
    zip \
    unzip \
    curl \
    wget \
    libqt5webkit5 \
    libgconf-2-4 \
    xvfb \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

ENV JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64/jre" \
    PATH=$PATH:$JAVA_HOME/bin

# Install latest nodejs, npm, appium
ARG APPIUM_VERSION=1.16.0
ENV APPIUM_VERSION=$APPIUM_VERSION

RUN curl -sL https://deb.nodesource.com/setup_12.x | bash && \
    apt-get -qqy install nodejs && \
    npm install -g appium@${APPIUM_VERSION} --unsafe-perm=true --allow-root && \
    exit 0 && \
    npm cache clean && \
    apt-get remove --purge -y npm && \
    apt-get autoremove --purge -y && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    apt-get clean

RUN apt-get --yes update && apt-get --yes install && \
    apt-get --yes install supervisor && \
    mkdir -p /var/log/supervisor && \
    mkdir -p /etc/supervisor/conf.d

ADD supervisor.conf /etc/supervisor.conf

#   Appium port
#===============
EXPOSE 4723
EXPOSE 1717

COPY wireless_connect.sh \
    wireless_autoconnect.sh \
    minicap.sh \
    stf-binaries-0.2 \
    appium.sh \
    index.js \
    /root/

WORKDIR stf-binaries-0.2

RUN npm install --unsafe-perm=true --allow-root

WORKDIR ..

RUN chmod +x /root/wireless_connect.sh && \
    chmod +x /root/wireless_autoconnect.sh && \
    chmod +x /root/minicap.sh && \
    chmod +x /root/appium.sh

WORKDIR ..

RUN wget -O /android/sdk/tools.zip https://dl.google.com/android/repository/build-tools_r30-rc1-linux.zip && \
    unzip /android/sdk/tools.zip -d /android/sdk && \
    mv /android/sdk/android-R /android/sdk/tools

RUN rm /android/sdk/tools.zip

HEALTHCHECK --interval=30s \
    --timeout=30s \
    --start-period=60s \
    --retries=3 \
    CMD /android/sdk/platform-tools/adb shell getprop dev.bootcomplete | grep "1"

CMD ["supervisord", "-c", "/etc/supervisor.conf"]
